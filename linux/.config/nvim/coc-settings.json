{
  "suggest.enablePreview": true,
  // "codeLens.enable": true, // to display number of references
  "diagnostic.checkCurrentLine": true,
  "diagnostic.errorSign": "✖",
  "diagnostic.warningSign": "⚠",
  "diagnostic.infoSign": "●",
  "diagnostic.hintSign": "○",

  // -------------------------------
  // --------- languages -----------
  // -------------------------------

  // "flow.enable": false,
  "prettier.printWidth": 100,
  "javascript.suggestionActions.enabled": false,
  "python.formatting.provider": "autopep8",
  "python.formatting.blackPath": "/home/ms/.local/bin/black",
  "python.formatting.autopep8Path": "/home/ms/.local/bin/autopep8",
  "Lua.diagnostics.globals": ["vim"],
  "clangd.fallbackFlags": ["-std=c++17", "-DSAWALHY"],
  "inlayHint.enable": false,
  "java.configuration.runtimes": [
    {
      "name": "JavaSE-11",
      "path": "/usr/lib/jvm/java-11-openjdk"
    },
    {
      "name": "JavaSE-17",
      "path": "/usr/lib/jvm/java-18-openjdk",
      "default": true
    }
  ],
  "languageserver": {
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    },
    "vimls": {
      "command": "vim-language-server", // npm i -g vim-language-server
      "args": ["--stdio"],
      "initializationOptions": {
        "isNeovim": true, // is neovim, default false
        "iskeyword": "@,48-57,_,192-255,-#", // vim iskeyword option
        "vimruntime": "", // $VIMRUNTIME option
        "runtimepath": "", // vim runtime path separate by `,`
        "diagnostic": {
          "enable": true
        },
        "indexes": {
          "runtimepath": true, // if index runtimepath's vim files this will effect the suggest
          "gap": 100, // index time gap between next file
          "count": 3, // count of files index at the same time
          "projectRootPatterns": ["strange-root-pattern", ".git", "autoload", "plugin"] // Names of files used as the mark of project root. If empty, the default value [".git", "autoload", "plugin"] will be used
        },
        "suggest": {
          "fromVimruntime": true, // completionItems from vimruntime's vim files
          "fromRuntimepath": false // completionItems from runtimepath's vim files, if this is true that fromVimruntime is true
        }
      },
      "filetypes": ["vim"]
    }
  },
  "diagnostic-languageserver.filetypes": {
    "sh": "shellcheck"
  },
  "java.format.settings.url": "/home/ms/.config/coc/extensions/node_modules/redhat.java/eclipse-formatter.xml",
  "git.enableGutters": true
}
