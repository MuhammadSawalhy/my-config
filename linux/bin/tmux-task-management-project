#!/bin/bash

SESSIONNAME="task-management-project"
# declare -a program_args=("$@")
# declare -c 
# declare -A args
# declare -a args_schema=(
#   --no-start -n  bool false
#   --old-back -ob bool false
# )
# 
# # TODO: <main args name> <schema...> [-- <sub command var name> <schema...>]...
# 
# function collect-args() {
#   set -- "${program_args[@]}"
#   while (($#)); do
#     declare program_arg="$1"; shift
#     for (( i = 0; i < ${#args_schema}; i += 4 )); do
#       declare arg_name=${args_schema[$i]}
#       declare short_name=${args_schema[$i + 1]}
#       declare type=${args_schema[$i + 2]}
#       declare is_optional=${args_schema[$i + 3]}
# 
#       if [  ]; then
#       fi
# 
#       eval "$args_var_name[$arg_name]='$(get_arg_value)'"
#     done
#   done
# 
# 
# 
#   local args_var_name="arg"; shift
#   local 
# }
# 
# collect-args
# 
# declare -p args
# exit

function send-command() {
  tmux send-keys -t $SESSIONNAME "$1" C-m
}

tmux has-session -t $SESSIONNAME &> /dev/null

if [ $? != 0 ]; then
  # new session, default window for frontend
  tmux new-session -s $SESSIONNAME -n frontend -c ~/myp/task-management/frontend -d
  tmux-ide 2 -t $SESSIONNAME -c ~/myp/task-management/frontend
  send-command "yarn dev"

  # backend window
  tmux new-window -n backend -t $SESSIONNAME -c ~/myp/ScicaveCursedTaskManagementBackend
  tmux send-keys -t $SESSIONNAME "source ./env/bin/activate" C-m
  tmux send-keys -t $SESSIONNAME "python manage.py runserver" C-m

  # go back to the frontend window
  tmux select-window -t $SESSIONNAME:frontend
  tmux select-pane -t $SESSIONNAME:frontend.1
  send-command "nvim"
fi

tmux attach -t $SESSIONNAME
