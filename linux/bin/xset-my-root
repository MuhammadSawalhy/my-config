#!/bin/bash
# REQUIRES FONT-AWESOME PACKAGE TO WORK PROPERLY

dte(){
  dte="$(date +"%a, %b %d %R")"
  echo "$dte"
}

hdd(){
  hdd="$(df -h /home | grep dev | awk '{print $3"/"$5}')"
  echo " $hdd"
}

mem(){
  # add extra 000 to make 0.5 0.50 to two two digits after . and not one
  mem="$(free -h | awk '/Mem:/ {printf $3/$2}')0"
  echo " ${mem:2:2}%"
}

cpu() {
  read -r cpu a b c previdle rest < /proc/stat
  prevtotal=$((a+b+c+previdle))
  sleep 0.5
  read -r cpu a b c idle rest < /proc/stat
  total=$((a+b+c+idle))
  cpu=$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))
  printf " %02d%%" $cpu
}

pkgs(){
  # pkgs="$(apt-mark showmanual  | wc -l)"
  pkgs="$(apt-mark showmanual  | wc -l)"
  echo " $pkgs"
}

upgrades(){
  upgrades="$(aptitude search '~U' | wc -l)"
  echo " $upgrades"
}

vpn(){
  vpn="$(ip a | grep tun0 | grep inet | wc -l)"
  echo "VPN: $vpn"
}

vol(){
  # pacmd list-sinks | awk '/muted/ { print $2 }'
  SINK=$(pactl list short sinks | sed -e 's,^\([0-9][0-9]*\)[^0-9].*,\1,' | head -n 1) # almost = 0

  vol=$(
    pactl list sinks |
    grep '^[[:space:]]Volume:' |
    head -n $(( SINK + 1 )) |
    tail -n 1 | awk '{ print $5 }'
  )

  muted=$(
    pactl list sinks |
    grep '^[[:space:]]Mute:' |
    head -n $(( SINK + 1 )) |
    tail -n 1 | awk '{ print $2 }'
  )

  if [ "$muted" = yes ]; then
    echo " Muted"
  else
    echo " $vol"
  fi
}

kernel(){
  kernel="$(uname -r | sed "s/-amd64//g")"
  echo "$kernel"
}

weather() {
  wthr="$(sed 20q ~/.config/weather.txt | grep value | awk '{print $2 $3}' | sed 's/"//g')"
  echo "$wthr"
}

temp() {
  tmp="$(grep temp_F ~/.config/weather.txt | awk '{print $2}' | sed 's/"//g' | sed 's/,/ F/')"
  echo "$tmp"
}

bat() {
  battery="$(cat /sys/class/power_supply/BAT0/capacity)"
  echo "  $battery%"
}

batstat() {
  bstat="$(cat /sys/class/power_supply/BAT0/status)"
  echo "$bstat"
}

netstat() {
  logfile="${XDG_CACHE_HOME:-$HOME/.cache}/netlog"
  prevdata="$(cat "$logfile")"

  rxcurrent="$(( $(cat /sys/class/net/*/statistics/rx_bytes | paste -sd '+') ))"
  txcurrent="$(( $(cat /sys/class/net/*/statistics/tx_bytes | paste -sd '+') ))"

  printf "%sKiB  %sKiB\\n" \
    "$(((rxcurrent-${prevdata%% *})/1024))" \
    "$(((txcurrent-${prevdata##* })/1024))"

  echo "$rxcurrent $txcurrent" > "$logfile"
}

prayer() {
  left=$(next-prayer --left | awk '{print $1}')
  echo " $left"
}

status(){
  echo "$(prayer)|$(cpu)│$(mem)│$(hdd)│$(vol)│$(dte)"
}

xsetroot -name "$(status)"
